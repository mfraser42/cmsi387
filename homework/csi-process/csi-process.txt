CSI-Process Assignment
Written by Michael Fraser

Used Chelsea's computer for the Mac, so her name shows up in the terminal prompt. 


Linux ( Linux Mint )
*** Using sum.c ***

1) linux-background.png: After invoking sum 2000 1000 3000 &, which caused the sum program to run in the background, I ran ls -i, which is hard to see in the mass of numbers. The output can be seen at the bottom of the picture, with the files and their corresponding inode numbers listed horizontally. 

2) linux-threads.png: After invoking "sum 1000 1000", and using Ctrl+Z to stop the program, I ran "ps -a" to list show the process running and to get the process ID number: 6204. The command ps -o nlwp 6204 shows the number of light weight processes. The result was 3, indicating 3 running threads. 

# JD: A step in the right direction, but another ps option would have given
#     you even more information.

Mac
*** Using sum.java ***
mac-background-and-threads.png: 

1-2) After invoking "java Sum 1000 2000 1500" it was possible to run the activity monitor and observe the number of threads associated with the process "java." It was found to be running 23 threads. 

It is cutoff by the picture, unfortunately, that the command I ran with the Mac is not shown. I ran the command ls -i, just as I did for linux, and received a similar output amongst the mess of output from the sum.java process. This would have illustrated the "running a process in the background" portion of the assignment.

** Comparison **
The Mac displays the threads in the Activity Monitor, whereas Linux does not. The nlwp portion of the linux command seems to identify threads as "light weight" processes, which would imply threads are like small or simple processes. 

# JD: Very nice speculation there on those lightweight processes.  That mystery ps option
#     would have told you a lot about whether that speculation is accurate.
